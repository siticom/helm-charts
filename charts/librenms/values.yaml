# Default values for librenms.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: librenms/librenms
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    add:
    - NET_ADMIN
    - NET_RAW
    # drop:
    # - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  # storageClassName: default
  accessModes: ["ReadWriteOnce"]
  size: 10Gi

env:
  TZ: "UTC"
  PUID: "1000"
  PGID: "1000"
  LIBRENMS_SNMP_COMMUNITY: "librenms"
  LIBRENMS_WEATHERMAP: "false"
  LIBRENMS_WEATHERMAP_SCHEDULE: "*/5 * * * *"
  MEMORY_LIMIT: "256M"
  MAX_INPUT_VARS: "1000"
  UPLOAD_MAX_SIZE: "16M"
  OPCACHE_MEM_SIZE: "128"
  REAL_IP_FROM: "0.0.0.0/32"
  REAL_IP_HEADER: "X-Forwarded-For"
  LOG_IP_VAR: "remote_addr"
  DB_TIMEOUT: "60"

cronJobs: []
  # enable fast ping check (https://docs.librenms.org/Extensions/Fast-Ping-Check/)
  # - "* * * * * librenms /opt/librenms/ping.php >> /dev/null 2>&1"

mariadb:
  enabled: true
  auth:
    database: librenms
    username: librenms
  primary:
    configuration: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      plugin_dir=/opt/bitnami/mariadb/plugin
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=*
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=utf8mb4
      collation-server=utf8mb4_unicode_ci
      slow_query_log=0
      slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
      long_query_time=10.0
      innodb_file_per_table=1
      lower_case_table_names=0

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mariadb/plugin

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: true
  master:
    disableCommands: ["FLUSHALL"]
